plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'  // Firebase SDK

// 민감한 API 키를 숨기기 위해 local.properties 사용
// 참고 : https://blog.mindorks.com/using-local-properties-file-to-avoid-api-keys-check-in-into-version-control-system
// 참고 : https://medium.com/affirmativedev/%EC%A4%91%EC%9A%94%ED%95%9C-%EA%B0%92%EB%93%A4%EC%9D%84-%EC%88%A8%EA%B2%A8%EB%B4%85%EC%8B%9C%EB%8B%A4-e5be00d2e921
Properties localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
def KAKAO_NATIVE_APP_KEY = localProperties.getProperty('kakao.sdk.native_app_key')

android {
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // KAKAO NATIVE APP KEY를 local.properties로부터 가져오기
        // 속성별 설명 참고 : https://yongyi1587.tistory.com/42
        //resValue("string", "KAKAO_NATIVE_APP_KEY", KAKAO_NATIVE_APP_KEY)
        buildConfigField("String", "KAKAO_NATIVE_APP_KEY", "\"" + KAKAO_NATIVE_APP_KEY + "\"")
        manifestPlaceholders["KAKAO_NATIVE_APP_KEY"] = "kakao"+KAKAO_NATIVE_APP_KEY
    }

    // Build Variants 관련 설명
    // 참고 : https://parkho79.tistory.com/107

    // Specifies one flavor dimension.
    // 참고 : https://developer.android.com/studio/build/build-variants#build-types
    flavorDimensions "version"
    // Assigns this product flavor to the "version" flavor dimension.
    // If you are using only one dimension, this property is optional,
    // and the plugin automatically assigns all the module's flavors to
    // that dimension.
    productFlavors {
        androidClient {
            dimension "version"
            applicationId "io.github.untactorder.androidclient"
            versionCode 5
            versionName "1.0.0.3"
        }
        orderAssistant {
            dimension "version"
            applicationId "io.github.untactorder.orderassistant"
            versionCode 1
            versionName "1.0.0.0"
        }
    }

    sourceSets {
        androidClient {
            // AndroidClient - UntactOrder
            manifest.srcFile "src/androidClient/AndroidManifest.xml"
            java.srcDirs = ["src/common/java", "src/androidClient/java", "src/common/kotlin", "src/androidClient/kotlin"]
            res.srcDirs = ["src/common/res", "src/androidClient/res"]
        }
        orderAssistant {
            // OrderAssistant - UntactOrder
            manifest.srcFile "src/orderAssistant/AndroidManifest.xml"
            java.srcDirs = ["src/common/java", "src/orderAssistant/java", "src/common/kotlin", "src/orderAssistant/kotlin"]
            res.srcDirs = ["src/common/res", "src/orderAssistant/res"]
        }
    }

    buildTypes {
        debug {
            debuggable true

            // 여기에 테스트 서버 주소를 입력하세요
            //buildConfigField("String", "SERVER", "\"" + SOMETHING + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Android 기본 의존성 모듈
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'com.android.volley:volley:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Kakao SDK 사용을 위한 의존성 모듈 | API 21: Android 5.0(Lollipop) 이상이어야 함
    implementation "com.kakao.sdk:v2-user:2.8.4" // 카카오 로그인
    //implementation "com.kakao.sdk:v2-talk:2.8.4" // 친구, 메시지(카카오톡)
    //implementation "com.kakao.sdk:v2-link:2.8.4" // 메시지(카카오링크)
    //implementation "com.kakao.sdk:v2-navi:2.8.4" // 카카오내비
    //implementation "com.kakao.sdk:v2-story:2.8.4" // 카카오스토리

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth'
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    // 기타 모듈
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.40'  // 유심 관련 라이브러리
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'  // qr 관련 라이브러리
    implementation 'com.google.zxing:core:3.4.1'  // qr 관련 라이브러리
    implementation 'com.google.code.gson:gson:2.8.9'  // json 관련 라이브러리
}
